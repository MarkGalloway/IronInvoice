{"version":3,"sources":["utils.js","views/InvoicePDF.jsx","views/InlinePDF.jsx","hooks.jsx","App.js","serviceWorker.js","index.js"],"names":["parseValue","value","parseFloat","calculateLineItemTotal","lineItem","unitCost","quantity","calculateSubTotal","lineItems","reduce","sum","calculateTax","subTotal","taxRate","calculateTotal","styles","StyleSheet","create","Page","color","fontFamily","fontSize","padding","Banner","flexDirection","flexWrap","height","backgroundColor","Header","position","left","right","top","justifyContent","alignItems","FontBold","HeaderBranding","HeaderImage","width","display","marginLeft","HeadingSummary","minWidth","HeadingSummaryColumn","paddingRight","HeaderTextItem","marginBottom","Body","BodyHeader","BillTo","marginRight","Description","Table","borderWidth","TableRow","margin","borderBottomWidth","borderColor","TableRowHeader","TableColumn","TableCell","TableCellHeader","TextRight","textAlign","SubTotalRow","SubTotalRowItem","paddingBottom","TotalRow","TotalRowValue","Footer","bottom","FooterTextItem","FooterPageNumbers","InvoicePDF","description","style","size","wrap","fixed","src","toFixed","map","key","id","render","pageNumber","totalPages","InlinePDF","props","Layout","frameBorder","document","loading","Button","variant","startIcon","styled","section","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","TEST_DATA","App","setDescription","setTaxRate","setLineItems","debouncedDescription","debouncedTaxRate","lineItemColumns","title","field","type","editable","rowData","Main","EditorSection","TextField","label","onChange","event","target","InputProps","startAdornment","InputAdornment","columns","boxShadow","data","onRowAdd","newData","a","newLineItem","Date","now","onRowUpdate","oldData","item","onRowDelete","filter","disabled","main","div","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ocAAaA,EAAa,SAAAC,GAAK,OAAIC,WAAWD,IAAU,GAE3CE,EAAyB,SAAAC,GACpC,OAAKA,EAEYJ,EAAWI,EAASC,UACpBL,EAAWI,EAASE,UAHf,GAOXC,EAAoB,SAAAC,GAAS,OACxCA,EAAUC,QACR,SAACC,EAAKN,GAAN,OAAmBM,EAAMP,EAAuBC,KAChD,IAGSO,EAAe,SAACC,EAAUC,GAAX,OAC1BD,GAAYZ,EAAWa,GAAW,MAEvBC,EAAiB,SAACF,EAAUC,GAAX,OAC5BD,EAAWD,EAAaC,EAAUC,I,yjBCGpC,IAAME,EAASC,IAAWC,OAAO,CAC/BC,KAAM,CACJC,MAAO,UACPC,WAAY,YACZC,SAAU,GACVC,QAAS,UAEXC,OAAQ,CACNC,cAAe,MACfC,SAAU,SACVC,OAAQ,IACRJ,QAAS,QACTK,gBAAiB,WAEnBC,OAAQ,CACNC,SAAU,WACVC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,eAAgB,gBAChBC,WAAY,UAEdC,SAAU,CACRf,WAAY,kBAEdgB,eAAgB,CACdZ,cAAe,MACfC,SAAU,SACVS,WAAY,SACZb,SAAU,IAEZgB,YAAa,CACXC,MAAO,GACPZ,OAAQ,GACRa,QAAS,QACTC,YAAa,IAEfC,eAAgB,CACdjB,cAAe,MACfC,SAAU,SACViB,SAAU,IACVrB,SAAU,IAEZsB,qBAAsB,CACpBC,aAAc,IAEhBC,eAAgB,CACdC,aAAc,GAEhBC,KAAM,CACJvB,cAAe,UAEjBwB,WAAY,CACVxB,cAAe,MACfS,eAAgB,gBAEhBd,MAAO,OACP2B,aAAc,IAEhBG,OAAQ,CACNC,YAAa,IAEfC,YAAa,CACXb,MAAO,KAETc,MAAO,CACLb,QAAS,QACTD,MAAO,OACPe,YAAa,GAEfC,SAAU,CACRC,OAAQ,OACR/B,cAAe,MACf6B,YAAa,EACbG,kBAAmB,EACnBC,YAAa,OACbpC,SAAU,IAEZqC,eAAgB,CACdH,OAAQ,OACR/B,cAAe,MACfH,SAAU,GACVgC,YAAa,GAEfM,YAAa,CACXrB,MAAO,OAITsB,UAAW,CACTtC,QAAS,QACTH,MAAO,QAET0C,gBAAiB,CACfvC,QAAS,QACTK,gBAAiB,QAEnBmC,UAAW,CACTC,UAAW,SAEbC,YAAa,CACXxC,cAAe,MACfS,eAAgB,WAChBX,QAAS,QACTH,MAAO,OACPE,SAAU,IAEZ4C,gBAAiB,CACfC,cAAe,QAEjBC,SAAU,CACR3C,cAAe,MACfS,eAAgB,WAChBX,QAAS,QACTD,SAAU,GACVM,gBAAiB,QAEnByC,cAAe,CACbL,UAAW,QACXzB,MAAO,KAET+B,OAAQ,CACNxC,SAAU,WACVC,KAAM,EACNC,MAAO,EACPuC,OAAQ,EACR9C,cAAe,MACfC,SAAU,SACVQ,eAAgB,YAElBsC,eAAgB,CACdzB,aAAc,IAEhB0B,kBAAmB,CACjB3C,SAAU,WACVyC,OAAQ,GACRxC,KAAM,MAqJK2C,EAjJI,SAAC,GAAyC,IAAvCjE,EAAsC,EAAtCA,UAAWK,EAA2B,EAA3BA,QAAS6D,EAAkB,EAAlBA,YACxC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,MAAO5D,EAAOG,KAAM0D,KAAK,KAAKC,MAAI,GACtC,kBAAC,IAAD,CAAMC,OAAK,EAACH,MAAK,KAAO5D,EAAOQ,OAAd,GAAyBR,EAAOa,SAC/C,kBAAC,IAAD,CAAM+C,MAAK,KAAO5D,EAAOqB,eAAd,GAAiCrB,EAAOoB,WACjD,kBAAC,IAAD,CACEwC,MAAO5D,EAAOsB,YACd0C,IAAI,6JAEN,kBAAC,IAAD,qBAEF,kBAAC,IAAD,CAAMJ,MAAO5D,EAAO0B,gBAClB,kBAAC,IAAD,CAAMkC,MAAO5D,EAAO4B,sBAClB,kBAAC,IAAD,CAAMgC,MAAO5D,EAAO8B,gBAApB,kBACA,kBAAC,IAAD,CAAM8B,MAAO5D,EAAO8B,gBAApB,gBACA,kBAAC,IAAD,CAAM8B,MAAO5D,EAAO8B,gBAApB,YACA,kBAAC,IAAD,qBAEF,kBAAC,IAAD,CAAM8B,MAAO5D,EAAO4B,sBAClB,kBAAC,IAAD,CAAMgC,MAAO5D,EAAO8B,gBAApB,QACA,kBAAC,IAAD,CAAM8B,MAAO5D,EAAO8B,gBAApB,gBACA,kBAAC,IAAD,CAAM8B,MAAO5D,EAAO8B,gBAApB,gBACA,kBAAC,IAAD,gBAAW/B,EACTP,EAAkBC,GAClBK,GACAmE,QAAQ,QAIhB,kBAAC,IAAD,CAAML,MAAO5D,EAAOgC,MAClB,kBAAC,IAAD,CAAM4B,MAAO5D,EAAOiC,YAClB,kBAAC,IAAD,CAAM2B,MAAO5D,EAAOkC,QAClB,kBAAC,IAAD,CAAM0B,MAAO5D,EAAOoB,UAApB,2BACA,kBAAC,IAAD,0BACA,kBAAC,IAAD,4BACA,kBAAC,IAAD,eACA,kBAAC,IAAD,sCAEF,kBAAC,IAAD,CAAMwC,MAAO5D,EAAOoC,aAClB,kBAAC,IAAD,KAAOuB,KAIX,kBAAC,IAAD,CAAMC,MAAO5D,EAAOqC,OAClB,kBAAC,IAAD,CAAMuB,MAAO5D,EAAO2C,gBAClB,kBAAC,IAAD,CAAMiB,MAAO5D,EAAO4C,aAClB,kBAAC,IAAD,CAAMgB,MAAO5D,EAAO8C,iBAApB,gBAEF,kBAAC,IAAD,CAAMc,MAAO5D,EAAO4C,aAClB,kBAAC,IAAD,CACEgB,MAAK,KAAO5D,EAAO8C,gBAAd,GAAkC9C,EAAO+C,YADhD,cAMF,kBAAC,IAAD,CAAMa,MAAO5D,EAAO4C,aAClB,kBAAC,IAAD,CACEgB,MAAK,KAAO5D,EAAO8C,gBAAd,GAAkC9C,EAAO+C,YADhD,aAMF,kBAAC,IAAD,CAAMa,MAAO5D,EAAO4C,aAClB,kBAAC,IAAD,CACEgB,MAAK,KAAO5D,EAAO8C,gBAAd,GAAkC9C,EAAO+C,YADhD,gBAOHtD,EAAUyE,KAAI,SAAA7E,GAAQ,OACrB,kBAAC,IAAD,CAAM8E,IAAK9E,EAAS+E,GAAIR,MAAO5D,EAAOuC,UACpC,kBAAC,IAAD,CAAMqB,MAAO5D,EAAO4C,aAClB,kBAAC,IAAD,CAAMgB,MAAO5D,EAAO6C,WAAYxD,EAASsE,cAE3C,kBAAC,IAAD,CAAMC,MAAO5D,EAAO4C,aAClB,kBAAC,IAAD,CAAMgB,MAAK,KAAO5D,EAAO6C,UAAd,GAA4B7C,EAAO+C,YAA9C,WACO9D,EAAWI,EAASC,UAAU2E,QAAQ,MAG/C,kBAAC,IAAD,CAAML,MAAO5D,EAAO4C,aAClB,kBAAC,IAAD,CAAMgB,MAAK,KAAO5D,EAAO6C,UAAd,GAA4B7C,EAAO+C,YAC3C9D,EAAWI,EAASE,YAGzB,kBAAC,IAAD,CAAMqE,MAAO5D,EAAO4C,aAClB,kBAAC,IAAD,CAAMgB,MAAK,KAAO5D,EAAO6C,UAAd,GAA4B7C,EAAO+C,YAA9C,WACO3D,EAAuBC,GAAU4E,QAAQ,WAMxD,kBAAC,IAAD,CAAML,MAAO5D,EAAOiD,aAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMW,MAAO5D,EAAOkD,iBAApB,aACA,kBAAC,IAAD,wBAAgBpD,GAAW,GAAGmE,QAAQ,GAAtC,WAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEL,MAAK,KAAO5D,EAAOqD,cAAd,GAAgCrD,EAAOkD,kBAD9C,WAGO1D,EAAkBC,GAAWwE,QAAQ,KAE5C,kBAAC,IAAD,CAAML,MAAO5D,EAAOqD,eAApB,WAAwCzD,EACtCJ,EAAkBC,GAClBK,GACAmE,QAAQ,OAGd,kBAAC,IAAD,CAAML,MAAO5D,EAAOoD,UAClB,kBAAC,IAAD,oBACA,kBAAC,IAAD,CAAMQ,MAAO5D,EAAOqD,eAApB,WAAwCtD,EACtCP,EAAkBC,GAClBK,GACAmE,QAAQ,OAGd,kBAAC,IAAD,CAAMF,OAAK,EAACH,MAAK,KAAO5D,EAAOQ,OAAd,GAAyBR,EAAOsD,SAC/C,kBAAC,IAAD,CACEM,MAAK,KACA5D,EAAO4B,qBADP,GAEA5B,EAAOyD,mBAEZY,OAAQ,gBAAGC,EAAH,EAAGA,WAAH,EAAeC,WAAf,qBAAwCD,MAElD,kBAAC,IAAD,CAAMV,MAAO5D,EAAO0B,gBAClB,kBAAC,IAAD,CAAMkC,MAAO5D,EAAO4B,sBAClB,kBAAC,IAAD,CAAMgC,MAAO5D,EAAOwD,gBAApB,mBACA,kBAAC,IAAD,CAAMI,MAAO5D,EAAOwD,gBAApB,wBACA,kBAAC,IAAD,sBAEF,kBAAC,IAAD,CAAMI,MAAO5D,EAAO4B,sBAClB,kBAAC,IAAD,CAAMgC,MAAO5D,EAAOwD,gBAApB,oBACA,kBAAC,IAAD,CAAMI,MAAO5D,EAAOwD,gBAApB,gBACA,kBAAC,IAAD,qB,+MCnSd,IAuBegB,EAvBG,SAAAC,GAChB,OACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAWnD,MAAM,MAAMZ,OAAO,MAAMgE,YAAY,KAC9C,kBAAC,EAAeF,IAElB,kBAAC,IAAD,CAAiBG,SAAU,kBAAC,EAAeH,KACxC,qBAAGI,QACQ,KACR,kBAACC,EAAA,EAAD,CACEC,QAAQ,YACR3E,MAAM,UACN4E,UAAW,kBAAC,IAAD,OAHb,qBAgBNN,EAASO,IAAOC,QAAV,KC/BCC,EAAc,SAACjG,EAAOkG,GAAW,IAAD,EACCC,mBAASnG,GADV,mBACpCoG,EADoC,KACpBC,EADoB,KAY3C,OATAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAkBrG,KACjBkG,GACH,OAAO,WACLO,aAAaF,MAEd,CAACvG,EAAOkG,IAEJE,G,sjCCCT,IAAMM,EAAY,CAChB,CACExB,GAAI,IACJT,YAAa,uBACbrE,SAAU,GACVC,SAAU,MAEZ,CACE6E,GAAI,IACJT,YAAa,UACbrE,SAAU,KACVC,SAAU,IAgHCsG,MA5Gf,WAAgB,IAAD,EACyBR,mBAAS,0BADlC,mBACN1B,EADM,KACOmC,EADP,OAEiBT,mBAAS,GAF1B,mBAENvF,EAFM,KAEGiG,EAFH,OAGqBV,mBAASO,GAH9B,mBAGNnG,EAHM,KAGKuG,EAHL,KAKPC,EAAuBd,EAAYxB,EAAa,KAChDuC,EAAmBf,EAAYrF,EAAS,KAExCqG,EAAkB,CACtB,CAAEC,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,YAAaC,MAAO,WAAYC,KAAM,WAC/C,CAAEF,MAAO,WAAYC,MAAO,WAAYC,KAAM,WAC9C,CACEF,MAAO,QACPC,MAAO,QACPC,KAAM,UACNC,SAAU,QACVlC,OAAQ,SAAAmC,GAAO,OACb,yCAAWpH,EAAuBoH,GAASvC,QAAQ,QAKzD,OACE,kBAACwC,EAAD,KACE,kEACA,kBAAC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAM,cACN1H,MAAOyE,EACPkD,SAAU,SAAAC,GAAK,OAAIhB,EAAegB,EAAMC,OAAO7H,QAC/CsD,OAAO,WAET,kBAACmE,EAAA,EAAD,CACEC,MAAM,WACNN,KAAK,SACLpH,MAAOY,EACP+G,SAAU,SAAAC,GAAK,OAAIf,EAAW5G,WAAW2H,EAAMC,OAAO7H,SACtDsD,OAAO,SACPwE,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBpG,SAAS,SAAzB,QAIN,kBAAC,IAAD,CACEqG,QAAShB,EACTvC,MAAO,CAAEwD,UAAW,OAAQrF,aAAc,GAC1CsF,KAAM5H,EACN2G,MAAM,aACNG,SAAU,CACRe,SAAS,WAAD,4BAAE,WAAMC,GAAN,eAAAC,EAAA,sDACFC,EAAc,CAClBrD,GAAIsD,KAAKC,MACThE,YAAa4D,EAAQ5D,YACrBrE,SAAUL,EAAWsI,EAAQjI,UAC7BC,SAAUN,EAAWsI,EAAQhI,WAE/ByG,EAAa,GAAD,mBAAKvG,GAAL,CAAgBgI,KAPpB,2CAAF,mDAAC,GASTG,YAAY,WAAD,4BAAE,WAAOL,EAASM,GAAhB,SAAAL,EAAA,sDACXxB,EACEvG,EAAUyE,KAAI,SAAA4D,GAAI,OAChBA,EAAK1D,KAAOyD,EAAQzD,GAApB,KACSmD,EADT,CACkBnD,GAAIyD,EAAQzD,KAC1B0D,MALG,2CAAF,qDAAC,GASZC,YAAY,WAAD,4BAAE,WAAMF,GAAN,SAAAL,EAAA,+EACXxB,EAAavG,EAAUuI,QAAO,SAAAF,GAAI,OAAIA,EAAK1D,KAAOyD,EAAQzD,QAD/C,2CAAF,mDAAC,MAIhB,kBAACuC,EAAA,EAAD,CACEC,MAAM,WACN1H,MAAOM,EAAkBC,GAAWwE,QAAQ,GAC5CgE,UAAQ,EACRjB,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBpG,SAAS,SAAzB,QAIN,kBAAC6F,EAAA,EAAD,CACEC,MAAM,QACN1H,MAAOa,EACLP,EAAkBC,GAClBK,GACAmE,QAAQ,GACVgE,UAAQ,EACRjB,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBpG,SAAS,SAAzB,SAKR,kBAAC,EAAD,CACErB,UAAWA,EACXkE,YAAasC,EACbnG,QAASoG,OASbO,EAAOxB,IAAOiD,KAAV,KAWJxD,EAASO,IAAOkD,IAAV,KAINzB,EAAgBzB,IAAOC,QAAV,KC/ICkD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASpE,OAAO,kBAAC,EAAD,MAASO,SAAS8D,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.96aafcbd.chunk.js","sourcesContent":["export const parseValue = value => parseFloat(value) || 0;\n\nexport const calculateLineItemTotal = lineItem => {\n  if (!lineItem) return 0;\n\n  const unitCost = parseValue(lineItem.unitCost);\n  const quantity = parseValue(lineItem.quantity);\n  return unitCost * quantity;\n};\n\nexport const calculateSubTotal = lineItems =>\n  lineItems.reduce(\n    (sum, lineItem) => sum + calculateLineItemTotal(lineItem),\n    0,\n  );\n\nexport const calculateTax = (subTotal, taxRate) =>\n  subTotal * (parseValue(taxRate) / 100);\n\nexport const calculateTotal = (subTotal, taxRate) =>\n  subTotal + calculateTax(subTotal, taxRate);\n","import React from 'react';\nimport {\n  Document,\n  Font,\n  Image,\n  Page,\n  StyleSheet,\n  Text,\n  View,\n} from '@react-pdf/renderer';\n\nimport {\n  calculateLineItemTotal,\n  calculateSubTotal,\n  calculateTax,\n  calculateTotal,\n  parseValue,\n} from '../utils';\n\n// const hyphenationCallback = word => word;\n\n// Font.registerHyphenationCallback(hyphenationCallback);\n\nconst styles = StyleSheet.create({\n  Page: {\n    color: '#ffffff',\n    fontFamily: 'Helvetica',\n    fontSize: 14,\n    padding: '120 40',\n  },\n  Banner: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    height: 100,\n    padding: '20 20',\n    backgroundColor: '#2196f3',\n  },\n  Header: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  FontBold: {\n    fontFamily: 'Helvetica-Bold',\n  },\n  HeaderBranding: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    alignItems: 'center',\n    fontSize: 38,\n  },\n  HeaderImage: {\n    width: 96,\n    height: 96,\n    display: 'block',\n    marginLeft: -10,\n  },\n  HeadingSummary: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    minWidth: 100,\n    fontSize: 12,\n  },\n  HeadingSummaryColumn: {\n    paddingRight: 25,\n  },\n  HeaderTextItem: {\n    marginBottom: 5,\n  },\n  Body: {\n    flexDirection: 'column',\n  },\n  BodyHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    // alignItems: 'flex-end',\n    color: '#000',\n    marginBottom: 20,\n  },\n  BillTo: {\n    marginRight: 40,\n  },\n  Description: {\n    width: 250,\n  },\n  Table: {\n    display: 'table',\n    width: 'auto',\n    borderWidth: 0,\n  },\n  TableRow: {\n    margin: 'auto',\n    flexDirection: 'row',\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    borderColor: '#999',\n    fontSize: 10,\n  },\n  TableRowHeader: {\n    margin: 'auto',\n    flexDirection: 'row',\n    fontSize: 14,\n    borderWidth: 0,\n  },\n  TableColumn: {\n    width: '25%',\n    // borderRightWidth: 2,\n    // borderRightColor: '#FFF',\n  },\n  TableCell: {\n    padding: '10 10',\n    color: '#000',\n  },\n  TableCellHeader: {\n    padding: '10 10',\n    backgroundColor: '#333',\n  },\n  TextRight: {\n    textAlign: 'right',\n  },\n  SubTotalRow: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    padding: '20 10',\n    color: '#000',\n    fontSize: 10,\n  },\n  SubTotalRowItem: {\n    paddingBottom: '10 0',\n  },\n  TotalRow: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    padding: '10 10',\n    fontSize: 14,\n    backgroundColor: '#333',\n  },\n  TotalRowValue: {\n    textAlign: 'right',\n    width: 150,\n  },\n  Footer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    justifyContent: 'flex-end',\n  },\n  FooterTextItem: {\n    marginBottom: 10,\n  },\n  FooterPageNumbers: {\n    position: 'absolute',\n    bottom: 40,\n    left: 20,\n  },\n});\n\nconst InvoicePDF = ({ lineItems, taxRate, description }) => {\n  return (\n    <Document>\n      <Page style={styles.Page} size=\"A4\" wrap>\n        <View fixed style={{ ...styles.Banner, ...styles.Header }}>\n          <View style={{ ...styles.HeaderBranding, ...styles.FontBold }}>\n            <Image\n              style={styles.HeaderImage}\n              src=\"https://images.squarespace-cdn.com/content/5387d935e4b040c8980c5e52/1504153099642-QW1AFPLS5DVCH4DGW2KR/IronSight-logo-white-bg-web-thicker-road-line.png\"\n            />\n            <Text>IronInvoice</Text>\n          </View>\n          <View style={styles.HeadingSummary}>\n            <View style={styles.HeadingSummaryColumn}>\n              <Text style={styles.HeaderTextItem}>Invoice Number</Text>\n              <Text style={styles.HeaderTextItem}>Invoice Date</Text>\n              <Text style={styles.HeaderTextItem}>Due Date</Text>\n              <Text>Balance Due</Text>\n            </View>\n            <View style={styles.HeadingSummaryColumn}>\n              <Text style={styles.HeaderTextItem}>0001</Text>\n              <Text style={styles.HeaderTextItem}>Oct 21, 2019</Text>\n              <Text style={styles.HeaderTextItem}>Oct 28, 2019</Text>\n              <Text>{`$${calculateTotal(\n                calculateSubTotal(lineItems),\n                taxRate,\n              ).toFixed(2)}`}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.Body}>\n          <View style={styles.BodyHeader}>\n            <View style={styles.BillTo}>\n              <Text style={styles.FontBold}>Mad Mike's Oil Emporium</Text>\n              <Text>24 Gateway Avenue</Text>\n              <Text>Calgary, AB T6E 2E2</Text>\n              <Text>Canada</Text>\n              <Text>AccountsBillable@madmikes.ca</Text>\n            </View>\n            <View style={styles.Description}>\n              <Text>{description}</Text>\n            </View>\n          </View>\n\n          <View style={styles.Table}>\n            <View style={styles.TableRowHeader}>\n              <View style={styles.TableColumn}>\n                <Text style={styles.TableCellHeader}>Description</Text>\n              </View>\n              <View style={styles.TableColumn}>\n                <Text\n                  style={{ ...styles.TableCellHeader, ...styles.TextRight }}\n                >\n                  Unit Cost\n                </Text>\n              </View>\n              <View style={styles.TableColumn}>\n                <Text\n                  style={{ ...styles.TableCellHeader, ...styles.TextRight }}\n                >\n                  Quantity\n                </Text>\n              </View>\n              <View style={styles.TableColumn}>\n                <Text\n                  style={{ ...styles.TableCellHeader, ...styles.TextRight }}\n                >\n                  Line Total\n                </Text>\n              </View>\n            </View>\n            {lineItems.map(lineItem => (\n              <View key={lineItem.id} style={styles.TableRow}>\n                <View style={styles.TableColumn}>\n                  <Text style={styles.TableCell}>{lineItem.description}</Text>\n                </View>\n                <View style={styles.TableColumn}>\n                  <Text style={{ ...styles.TableCell, ...styles.TextRight }}>\n                    {`$${parseValue(lineItem.unitCost).toFixed(2)}`}\n                  </Text>\n                </View>\n                <View style={styles.TableColumn}>\n                  <Text style={{ ...styles.TableCell, ...styles.TextRight }}>\n                    {parseValue(lineItem.quantity)}\n                  </Text>\n                </View>\n                <View style={styles.TableColumn}>\n                  <Text style={{ ...styles.TableCell, ...styles.TextRight }}>\n                    {`$${calculateLineItemTotal(lineItem).toFixed(2)}`}\n                  </Text>\n                </View>\n              </View>\n            ))}\n          </View>\n          <View style={styles.SubTotalRow}>\n            <View>\n              <Text style={styles.SubTotalRowItem}>Sub Total</Text>\n              <Text>Tax ({`${(taxRate || 0).toFixed(2)}%`})</Text>\n            </View>\n            <View>\n              <Text\n                style={{ ...styles.TotalRowValue, ...styles.SubTotalRowItem }}\n              >\n                {`$${calculateSubTotal(lineItems).toFixed(2)}`}\n              </Text>\n              <Text style={styles.TotalRowValue}>{`$${calculateTax(\n                calculateSubTotal(lineItems),\n                taxRate,\n              ).toFixed(2)}`}</Text>\n            </View>\n          </View>\n          <View style={styles.TotalRow}>\n            <Text>Balance Due</Text>\n            <Text style={styles.TotalRowValue}>{`$${calculateTotal(\n              calculateSubTotal(lineItems),\n              taxRate,\n            ).toFixed(2)}`}</Text>\n          </View>\n        </View>\n        <View fixed style={{ ...styles.Banner, ...styles.Footer }}>\n          <Text\n            style={{\n              ...styles.HeadingSummaryColumn,\n              ...styles.FooterPageNumbers,\n            }}\n            render={({ pageNumber, totalPages }) => `Page ${pageNumber}`}\n          />\n          <View style={styles.HeadingSummary}>\n            <View style={styles.HeadingSummaryColumn}>\n              <Text style={styles.FooterTextItem}>Frank Jesperson</Text>\n              <Text style={styles.FooterTextItem}>FrankyJ@ironsight.ca</Text>\n              <Text>+15557801234</Text>\n            </View>\n            <View style={styles.HeadingSummaryColumn}>\n              <Text style={styles.FooterTextItem}>Startup Edmonton</Text>\n              <Text style={styles.FooterTextItem}>Edmonton, AB</Text>\n              <Text>Canada</Text>\n            </View>\n          </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default InvoicePDF;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport Button from '@material-ui/core/Button';\n\nimport InvoicePDF from './InvoicePDF';\n\nconst InlinePDF = props => {\n  return (\n    <Layout>\n      <PDFViewer width=\"595\" height=\"900\" frameBorder=\"0\">\n        <InvoicePDF {...props} />\n      </PDFViewer>\n      <PDFDownloadLink document={<InvoicePDF {...props} />}>\n        {({ loading }) =>\n          loading ? null : (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              startIcon={<CloudDownloadIcon />}\n            >\n              Download PDF\n            </Button>\n          )\n        }\n      </PDFDownloadLink>\n    </Layout>\n  );\n};\n\nexport default InlinePDF;\n\nconst Layout = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  a {\n    text-decoration: none;\n    align-self: center;\n\n    margin-top: 1em;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\n\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport MaterialTable from 'material-table';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport InlinePDF from './views/InlinePDF';\nimport {\n  calculateLineItemTotal,\n  parseValue,\n  calculateSubTotal,\n  calculateTotal,\n} from './utils';\nimport { useDebounce } from './hooks';\n\nconst TEST_DATA = [\n  {\n    id: 654,\n    description: 'Computer Programming',\n    unitCost: 56,\n    quantity: 35.8,\n  },\n  {\n    id: 655,\n    description: 'Massage',\n    unitCost: 75.5,\n    quantity: 1,\n  },\n];\n\nfunction App() {\n  const [description, setDescription] = useState('For services rendered.');\n  const [taxRate, setTaxRate] = useState(0.0);\n  const [lineItems, setLineItems] = useState(TEST_DATA);\n\n  const debouncedDescription = useDebounce(description, 500);\n  const debouncedTaxRate = useDebounce(taxRate, 500);\n\n  const lineItemColumns = [\n    { title: 'Description', field: 'description' },\n    { title: 'Unit Cost', field: 'unitCost', type: 'numeric' },\n    { title: 'Quantity', field: 'quantity', type: 'numeric' },\n    {\n      title: 'Total',\n      field: 'total',\n      type: 'numeric',\n      editable: 'never',\n      render: rowData => (\n        <span>{`$${calculateLineItemTotal(rowData).toFixed(2)}`}</span>\n      ),\n    },\n  ];\n\n  return (\n    <Main>\n      <h1>IronInvoice: Invoice Creation Tool</h1>\n      <Layout>\n        <EditorSection>\n          <TextField\n            label=\"Description\"\n            value={description}\n            onChange={event => setDescription(event.target.value)}\n            margin=\"normal\"\n          />\n          <TextField\n            label=\"Tax Rate\"\n            type=\"number\"\n            value={taxRate}\n            onChange={event => setTaxRate(parseFloat(event.target.value))}\n            margin=\"normal\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">%</InputAdornment>\n              ),\n            }}\n          />\n          <MaterialTable\n            columns={lineItemColumns}\n            style={{ boxShadow: 'none', marginBottom: 0 }}\n            data={lineItems}\n            title=\"Line Items\"\n            editable={{\n              onRowAdd: async newData => {\n                const newLineItem = {\n                  id: Date.now(),\n                  description: newData.description,\n                  unitCost: parseValue(newData.unitCost),\n                  quantity: parseValue(newData.quantity),\n                };\n                setLineItems([...lineItems, newLineItem]);\n              },\n              onRowUpdate: async (newData, oldData) => {\n                setLineItems(\n                  lineItems.map(item =>\n                    item.id === oldData.id\n                      ? { ...newData, id: oldData.id }\n                      : item,\n                  ),\n                );\n              },\n              onRowDelete: async oldData =>\n                setLineItems(lineItems.filter(item => item.id !== oldData.id)),\n            }}\n          />\n          <TextField\n            label=\"Subtotal\"\n            value={calculateSubTotal(lineItems).toFixed(2)}\n            disabled\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">$</InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            label=\"Total\"\n            value={calculateTotal(\n              calculateSubTotal(lineItems),\n              taxRate,\n            ).toFixed(2)}\n            disabled\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">$</InputAdornment>\n              ),\n            }}\n          />\n        </EditorSection>\n        <InlinePDF\n          lineItems={lineItems}\n          description={debouncedDescription}\n          taxRate={debouncedTaxRate}\n        />\n      </Layout>\n    </Main>\n  );\n}\n\nexport default App;\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  margin: 0 1em 2em 1em;\n\n  & > h1 {\n    align-self: center;\n    margin-bottom: 2em;\n  }\n`;\n\nconst Layout = styled.div`\n  display: flex;\n`;\n\nconst EditorSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  margin-right: 4em;\n  & > * {\n    margin-bottom: 2em !important;\n  }\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}